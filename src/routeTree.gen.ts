/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as EditImport } from './routes/edit'
import { Route as AddImport } from './routes/add'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as SettingIndexImport } from './routes/setting/index'
import { Route as SettingSortImport } from './routes/setting/sort'
import { Route as DetailHabitIdImport } from './routes/detail/$habitId'

// Create/Update Routes

const EditRoute = EditImport.update({
  path: '/edit',
  getParentRoute: () => rootRoute,
} as any)

const AddRoute = AddImport.update({
  path: '/add',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SettingIndexRoute = SettingIndexImport.update({
  path: '/setting/',
  getParentRoute: () => rootRoute,
} as any)

const SettingSortRoute = SettingSortImport.update({
  path: '/setting/sort',
  getParentRoute: () => rootRoute,
} as any)

const DetailHabitIdRoute = DetailHabitIdImport.update({
  path: '/detail/$habitId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/add': {
      id: '/add'
      path: '/add'
      fullPath: '/add'
      preLoaderRoute: typeof AddImport
      parentRoute: typeof rootRoute
    }
    '/edit': {
      id: '/edit'
      path: '/edit'
      fullPath: '/edit'
      preLoaderRoute: typeof EditImport
      parentRoute: typeof rootRoute
    }
    '/detail/$habitId': {
      id: '/detail/$habitId'
      path: '/detail/$habitId'
      fullPath: '/detail/$habitId'
      preLoaderRoute: typeof DetailHabitIdImport
      parentRoute: typeof rootRoute
    }
    '/setting/sort': {
      id: '/setting/sort'
      path: '/setting/sort'
      fullPath: '/setting/sort'
      preLoaderRoute: typeof SettingSortImport
      parentRoute: typeof rootRoute
    }
    '/setting/': {
      id: '/setting/'
      path: '/setting'
      fullPath: '/setting'
      preLoaderRoute: typeof SettingIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AboutRoute,
  AddRoute,
  EditRoute,
  DetailHabitIdRoute,
  SettingSortRoute,
  SettingIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/add",
        "/edit",
        "/detail/$habitId",
        "/setting/sort",
        "/setting/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/add": {
      "filePath": "add.tsx"
    },
    "/edit": {
      "filePath": "edit.tsx"
    },
    "/detail/$habitId": {
      "filePath": "detail/$habitId.tsx"
    },
    "/setting/sort": {
      "filePath": "setting/sort.tsx"
    },
    "/setting/": {
      "filePath": "setting/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
